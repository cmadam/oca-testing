name: Integration Testing for Kestrel and STIX-Shifter Using GitHub Actions
on: 
  workflow_dispatch:
  push:
    branches:
      - main
  pull_request:
# This allows a subsequently queued workflow run to interrupt previous runs
concurrency:
  group: '${{ github.workflow }} @ ${{ github.event.pull_request.head.label || github.head_ref || github.ref }}'
  cancel-in-progress: true

jobs:
  integrated-testing:
    runs-on: ubuntu-20.04
    steps:
      - name: Worflow Information
        run: |
          echo "Triggered by ${{ github.actor }} through a ${{ github.event_name }} event."
          echo "Running on a ${{ runner.os }} server hosted by GitHub"
          echo "Running in ${{ github.repository }} repository, ${{ github.ref }} branch."
          echo "HOME = ${HOME}"
      - name: Code Checkout
        uses: actions/checkout@v3
      - name: Launch the elastic docker image
        run: ./elastic-install.sh
      - name: Kestrel Code Checkout
        uses: actions/checkout@v3
        with:
          repository: ${{ github.actor }}/kestrel-lang
          path: './kestrel-lang'
      - name: STIX-Shifter Code Checkout
        uses: actions/checkout@v3
        with:
          repository: ${{ github.actor }}/stix-shifter
          path: './stix-shifter'
      - name: elastictl Code Checkout
        uses: actions/checkout@v3
        with:
          repository: subbyte/elastictl
          path: './elastictl'
      - name: Virtual Environment Creation and Activation
        run: |
          ./create-venv.sh
          . huntingtest/bin/activate
          echo "venv_activate=$VIRTUAL_ENV/bin/activate" >> $GITHUB_ENV
      - name: Install kestrel and STIX-Shifter from Source Code
        run: |
          source ${{ env.venv_activate }}
          cd ${{ github.workspace }} 
          ./install-stix-shifter-kestrel.sh
      - name: Install elastictl
        run: |
          cp Dockerfile.build.elastictl elastictl
          cp elastictl-patch/import.go elastictl/tools/
          ./install-elastictl.sh
      - name: Import test data in elastic instance
        run: |
          source ${{ env.venv_activate }}
          wget https://github.com/opencybersecurityalliance/data-bucket-kestrel/raw/main/elasticsearch/linux-91-sysflow-test-20220725.json.gz
          wget https://github.com/opencybersecurityalliance/data-bucket-kestrel/raw/main/elasticsearch/win-111-winlogbeat-bh22-20220727.json.gz
          wget https://github.com/opencybersecurityalliance/data-bucket-kestrel/raw/main/elasticsearch/win-111-winlogbeat-test-20220726.json.gz
          python import_data.py
          gunzip linux-91-sysflow-test-20220725.json.gz
          gunzip win-111-winlogbeat-bh22-20220727.json.gz
          gunzip win-111-winlogbeat-test-20220726.json.gz
          elastictl/bin/elastictl i -N test-ecs < test-ecs.data
          elastictl/bin/elastictl i -N linux-91-sysflow-test-20220725 < linux-91-sysflow-test-20220725.json
          elastictl/bin/elastictl i -N win-111-winlogbeat-bh22-20220727 < win-111-winlogbeat-bh22-20220727.json
          elastictl/bin/elastictl i -N win-111-winlogbeat-test-20220726 < win-111-winlogbeat-test-20220726.json
      - name: List files in the repository
        run: |
          ls ${{ github.workspace }}
      - name: Job Status
        run: echo "This job's status is ${{ job.status }}."