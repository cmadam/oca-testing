name: Dispatcher Using Action
on:
    push:
        branches: [main, pr]
    pull_request:
        branches: [main, develop]
        types: [opened, synchronize, reopened]
    workflow_dispatch:
        inputs:
            organization:
                description: 'Kestrel repo organization'
                required: true
                default: 'opencybersecurityalliance'
            repository:
                description: 'Kestrel repo name'
                required: true
                default: 'kestrel-lang'
            branch:
                description: 'Kestrel repo branch'
                required: true
                default: 'develop'

jobs:
    dispatch:
        name: Dispatch Using Action
        runs-on: ubuntu-latest
        steps:
        - name: Print parameters
          run: |
            echo "GITHUB: ${{ toJson(github) }}"
            if [[ ${{ github.event_name }} == "workflow_dispatch" ]]; then
                echo "organization=${{ github.event.inputs.organization }}" >> $GITHUB_ENV
                echo "repository=${{ github.event.inputs.repository }}" >> $GITHUB_ENV
                echo "branch=${{ github.event.inputs.branch }}" >> $GITHUB_ENV
            elif [[ ${{ github.event_name }} == "push" ]]; then
                echo "got a push event. ${{ github.event }}"
                echo "organization=${{ github.event.repository.owner.login }}" >> $GITHUB_ENV
                echo "repository=${{ github.event.repository.name }}" >> $GITHUB_ENV
                echo "branch=${{ github.event.ref }}" >> $GITHUB_ENV
            elif [[ ${{ github.event_name }} == "pull_request" ]]; then
                echo "organization=${{ github.event.pull_request.head.repo.owner.login }}" >> $GITHUB_ENV
                echo "repository=${{ github.event.pull_request.head.repo.name }}" >> $GITHUB_ENV
                echo "branch=${{ github.event.pull_request.head.ref }}" >> $GITHUB_ENV
            fi
            echo "organization: ${{ env.organization }}, branch: ${{ env.branch }}"
        - name: Dispatch to workflows
          uses: convictional/trigger-workflow-and-wait@v1.6.5
          with:
            owner: cmadam
            repo: hunting-stack-testing
            github_token: ${{ secrets.REMOTE_FINE_GRAINED_ACTIONS_TOKEN }}
            workflow_file_name: testing_receiver.yml
            ref: main
            wait_interval: 10
            propagate_failure: true
            trigger_workflow: true
            wait_workflow: true
            client_payload: '{"organization": "${{ env.organization}}", "branch": "${{ env.branch }}"}'